# -----------------$HOME/.abcde.conf----------------- #
#
# An abcde configuration I've built to automatically to convert music cds to flac, 
#
# -------------------------------------------------- #

# -------------------------------------------------- #
# SETUP
# -------------------------------------------------- #

## Install Normal packages
# abcde
# inetutils
# glyr
# python-eyed3
# cdparanoia
# flac
# libdiscid
# libmusicbrainz5
# libcoverart
# picard
# python-discid
# python-musicbrainzngs

### Install CPAN packages
# sudo cpan install MusicBrainz::DiscID
# sudo cpan install WebService::MusicBrainz


# -------------------------------------------------- #
# VARIABLES
# -------------------------------------------------- #
# Encode tracks immediately after reading. Saves disk space, gives
# better reading of 'scratchy' disks and better troubleshooting of
# encoding process but slows the operation of abcde quite a bit:
LOWDISK=y
INTERACTIVE=n

# Specify the method to use to retrieve the track information,
# the alternative is to specify 'musicbrainz':
#CDDBMETHOD=cddb
CDDBMETHOD=musicbrainz			# Use MusicBrainz for CDDB

# Give the path to the metadata search application glyrc. Add any
# glyrc options:
GLYRC=glyrc
GLYRCOPTS=

# Give the path to ImageMagick's 'identify' which is used to give a
# commandline summary of the album art and also assist in any conversions.
# Add any 'identify' options:
IDENTIFY=identify
IDENTIFYOPTS=

# Give the path to ImageMagick's 'display' which will show the album art.
# The options below are the abcde default, feel free to add your own:
DISPLAYCMD=display
DISPLAYCMDOPTS="-resize 512x512 -title abcde_album_art"

# Give the path to ImageMagick's 'convert' which is used to convert album
# art to the format specified in ALBUMARTTYPE. Add any 'convert' options:
CONVERT=convert
CONVERTOPTS=

# If you want to run CONVERTOPTS on all files (including those specified
# in ALBUMARTTYPE) set the following to "y":
ALBUMARTALWAYSCONVERT="n"

# By default the filename will be cover.jpg and the file format will
# be jpeg. 'convert' will automagically change other formats to jpeg:
#ALBUMARTFILE="folder.jpg"
ALBUMARTFILE="cover.jpg"
ALBUMARTTYPE="JPEG"

# Make a local cache of cddb entries and then volunteer to use
# these entries when and if they match the cd:
CDDBCOPYLOCAL="y"
CDDBLOCALDIR="${HOME}/.cddb"
CDDBLOCALRECURSIVE="y"
CDDBUSELOCAL="y"

# Specify the encoder to use for FLAC. In this case
# flac is the only choice.
FLACENCODERSYNTAX=flac

# Specify the path to the selected encoder. In most cases the encoder
# should be in your $PATH as I illustrate below, otherwise you will
# need to specify the full path. For example: /usr/bin/flac
FLAC=flac

# Specify your required encoding options here. Multiple options can
# be selected as '--best --another-option' etc.
# Overall bitrate is about 880 kbs/s with level 8.
#FLACOPTS='-s -e -V -8'
FLACOPTS='--verify --best'

# Output type for FLAC.
OUTPUTTYPE="flac"

# The cd ripping program to use. There are a few choices here: cdda2wav,
# dagrab, cddafs (Mac OS X only) and flac. New to abcde 2.7 is 'libcdio'.
CDROMREADERSYNTAX=cdparanoia

# Give the location of the ripping program and pass any extra options,
# if using libcdio set 'CD_PARANOIA=cd-paranoia'.
CDPARANOIA=cdparanoia
CDPARANOIAOPTS="--never-skip=40"

# Give the location of the CD identification program:
CDDISCID=cd-discid

# Give the base location here for the encoded music files.
# OUTPUTDIR="$HOME/Music/RipTransfers"
OUTPUTDIR="${HOME}/Music-ripped"

# The default actions that abcde will take.
ACTIONS=cddb,read,encode,tag,move,clean,getalbumart

# Decide here how you want the tracks labelled for a standard 'single-artist',
# multi-track encode and also for a multi-track, 'various-artist' encode:
#OUTPUTFORMAT='${ARTISTFILE}/${ALBUMFILE}/${TRACKNUM} - ${TRACKFILE} - ${ARTISTFILE}'
#VAOUTPUTFORMAT='Various/${ALBUMFILE}/${TRACKNUM} - ${TRACKFILE} - ${ARTISTFILE}'
OUTPUTFORMAT='${ARTISTFILE}/${ALBUMFILE}/${TRACKNUM} - ${TRACKFILE}'
VAOUTPUTFORMAT='Various/${ALBUMFILE}/${TRACKNUM} - ${TRACKFILE}'

# Decide here how you want the tracks labelled for a standard 'single-artist',
# single-track encode and also for a single-track 'various-artist' encode.
# (Create a single-track encode with 'abcde -1' from the commandline.)
ONETRACKOUTPUTFORMAT='${ARTISTFILE}-${ALBUMFILE}/${ALBUMFILE}'
VAONETRACKOUTPUTFORMAT='Various/${ALBUMFILE}/${ALBUMFILE}'

# Create playlists for single and various-artist encodes. I would suggest
# commenting these out for single-track encoding.
PLAYLISTFORMAT='${ARTISTFILE}-${ALBUMFILE}/${ALBUMFILE}.m3u'
VAPLAYLISTFORMAT='Various-${ALBUMFILE}/${ALBUMFILE}.m3u'

# This function takes out dots preceding the album name, and removes a grab
# bag of illegal characters. It allows spaces, if you do not wish spaces add
# in -e 's/ /_/g' after the first sed command.
mungefilename ()
{
  echo "$@" | sed -e 's/^\.*//' | tr -d ":><|*/\"'?[:cntrl:]"
}

# What extra options?
MAXPROCS=6                              # Run a few encoders simultaneously
PADTRACKS=y                             # Makes tracks 01 02 not 1 2
EXTRAVERBOSE=2                          # Useful for debugging
COMMENT='abcde version v2.9.3.'         # Place a comment...
EJECTCD=y                               # Please eject cd when finished :-)


#--------------------------------------------------------------------------#
#  A post_encode function to embed album art downloaded with abcde 2.7     #
#  and greater using the new getalbumart function. OUTPUTTYPE must be      #
#  flac and and tagging is with metaflac. To use this function copy the    #
#  entire code block and paste it into your ~/.abcde.conf file.            #
#                                                                          #
#                abcde: Downloading Album Art...                           #
#    http://www.andrews-corner.org/linux/abcde/getalbumart.html            #
#--------------------------------------------------------------------------#
post_encode ()
{
ARTISTFILE="$(mungefilename "$TRACKARTIST")"
ALBUMFILE="$(mungefilename "$DALBUM")"
GENRE="$(mungegenre "$GENRE")"
YEAR=${CDYEAR:-$CDYEAR}

if [ "$VARIOUSARTISTS" = "y" ] ; then
FINDPATH="$(eval echo "$VAOUTPUTFORMAT")"
else
FINDPATH="$(eval echo "$OUTPUTFORMAT")"
fi

FINALDIR="$(dirname "$OUTPUTDIR")"
FINALDIR1="$(dirname "$OUTPUTDIR")"
#C_CMD=(chown -R jlivin25:jlivin25 "$FINALDIR")
#C_CMD1=(chmod -R 777 "$FINALDIR")
#echo "${C_CMD[@]}" >> tmp2.log
"${C_CMD[@]}"
"${C_CMD1[@]}"
cd "$FINALDIR"

if [ "$OUTPUTTYPE" = "flac" ] ; then
#vecho "Preparing to embed the album art..." >&2
	echo "Preparing to embed the album art..." >&2
else
#vecho "Not embedding album art, you need flac output.." >&2
	echo "Not embedding album art, you need flac output.." >&2
	return 1
fi

pwd
#if [ -f "${ALBUMARTFILE}" ] ; then
for i in *.flac
do
	metaflac --import-picture-from=${ALBUMARTFILE} "$i"
done
	#vecho "Your files have had the album art embedded..." >&2
	echo "Your files have had the album art embedded..." >&2
#else
	#vecho "No album art found so no image embedded..." >&2
#	echo "No album art found so no image embedded..." >&2
#fi
}
